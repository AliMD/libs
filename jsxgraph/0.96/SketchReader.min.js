/* Version 0.96 */
/* Version 0.96 */
/*
    Copyright 2008-2012
        Matthias Ehmann,
        Michael Gerhaeuser,
        Carsten Miller,
        Bianca Valentin,
        Alfred Wassermann,
        Peter Wilfahrt

    This file is part of JSXGraph.

    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.
    
    You can redistribute it and/or modify it under the terms of the
    
      * GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version
      OR
      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT

    JSXGraph is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License and
    the MIT License along with JSXGraph. If not, see <http://www.gnu.org/licenses/>
    and <http://opensource.org/licenses/MIT/>.
*/
    JXG.extend(JXG,{GENTYPE_ABC:1,GENTYPE_AXIS:2,GENTYPE_MID:3,GENTYPE_REFLECTION:4,GENTYPE_MIRRORPOINT:5,GENTYPE_TANGENT:6,GENTYPE_PARALLEL:7,GENTYPE_BISECTORLINES:8,GENTYPE_PERPENDICULAR_BISECTOR:9,GENTYPE_BISECTOR:10,GENTYPE_NORMAL:11,GENTYPE_POINT:12,GENTYPE_GLIDER:13,GENTYPE_INTERSECTION:14,GENTYPE_CIRCLE:15,GENTYPE_CIRCLE2POINTS:16,GENTYPE_LINE:17,GENTYPE_TRIANGLE:18,GENTYPE_QUADRILATERAL:19,GENTYPE_TEXT:20,GENTYPE_POLYGON:21,GENTYPE_REGULARPOLYGON:22,GENTYPE_SECTOR:23,GENTYPE_ANGLE:24,GENTYPE_PLOT:25,GENTYPE_SLIDER:26,GENTYPE_XYZ:27,GENTYPE_JCODE:28,GENTYPE_MOVEMENT:29,GENTYPE_GRID:33,GENTYPE_DELETE:41,GENTYPE_COPY:42,GENTYPE_MIRROR:43,GENTYPE_ROTATE:44,GENTYPE_ABLATION:45,GENTYPE_MIGRATE:46,GENTYPE_TRANSFORM:47,GENTYPE_CTX_TYPE_G:51,GENTYPE_CTX_TYPE_P:52,GENTYPE_CTX_TRACE:53,GENTYPE_CTX_VISIBILITY:54,GENTYPE_CTX_CCVISIBILITY:55,GENTYPE_CTX_MPVISIBILITY:56,GENTYPE_CTX_WITHLABEL:57,GENTYPE_CTX_SETLABEL:58,GENTYPE_CTX_SETFIXED:59,GENTYPE_CTX_STROKEWIDTH:60,GENTYPE_CTX_LABELSIZE:61,GENTYPE_CTX_SIZE:62,GENTYPE_CTX_FACE:63,GENTYPE_CTX_STRAIGHT:64,GENTYPE_CTX_ARROW:65,GENTYPE_CTX_COLOR:66,GENTYPE_CTX_RADIUS:67,GENTYPE_CTX_COORDS:68,GENTYPE_CTX_TEXT:69,GENTYPE_CTX_ANGLERADIUS:70,GENTYPE_CTX_DOTVISIBILITY:71,GENTYPE_CTX_FILLOPACITY:72,SketchReader:{generator:{toFixed:0,freeLine:!1,useGlider:!1,useSymbols:!1},generateJCodeMeta:function(){},id:function(){return JXG.Util.genUUID()},generateJCode:function(e,t,n){var r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L=[],A="",O="",M="",_="";r=JXG.SketchReader.generator,v=t.objects;var D=function(e){return r.toFixed>0&&(e=e.toFixed(r.toFixed)),e},P=function(e){var n;return r.useSymbols?t.jc.sstack[0][e]?n=t.jc.sstack[0][e]:n=v[e]:n=v[e],n};i="",s="id: '"+e.dest_id+"', ";if(JXG.exists(t)&&r.useSymbols&&e.type!==JXG.GENTYPE_ABLATION){s="",i=e.dest_id+" = ";for(a=0;a<e.src_ids.length;a++)h=t.jc.findSymbol(P(e.src_ids[a]),0),h.length>0&&(e.src_ids[a]=h[0])}if(e.type>50)return JXG.SketchReader.generateJCodeMeta(e,t);switch(e.type){case JXG.GENTYPE_JCODE:A=e.args.code;break;case JXG.GENTYPE_AXIS:A=e.args.name[0]+" = point("+D(e.args.coords[0].usrCoords[1])+", ",A+=D(e.args.coords[0].usrCoords[2])+") <<id: '"+e.dest_sub_ids[0]+"', name: '",A+=e.args.name[0]+"', fixed: true, priv: true, visible: false>>; "+e.args.name[1],A+=" = point("+D(e.args.coords[1].usrCoords[1])+", ",A+=D(e.args.coords[1].usrCoords[2])+") <<id: '"+e.dest_sub_ids[1]+"', name: '",A+=e.args.name[1]+"', fixed: true, priv: true, visible: false>>; "+e.args.name[2],A+=" = point("+D(e.args.coords[2].usrCoords[1])+", ",A+=D(e.args.coords[2].usrCoords[2])+") <<id: '"+e.dest_sub_ids[2]+"', name: '",A+=e.args.name[2]+"', fixed: true, priv: true, visible: false>>; ",A+=e.args.name[3]+" = axis("+e.args.name[0]+", "+e.args.name[1]+") ",A+="<<id: '"+e.dest_sub_ids[3]+"', name: '"+e.args.name[3]+"', ticks: ",A+="<<minorHeight:0, majorHeight:10, ticksDistance: "+JXG.Options.axisScaleX,A+=", drawLabels: true, drawZero: true>>>>; ",A+=e.args.name[4]+" = axis("+e.args.name[0]+", "+e.args.name[2]+") ",A+="<<id: '"+e.dest_sub_ids[4]+"', name: '"+e.args.name[4]+"', ticks: ",A+="<<minorHeight:0, majorHeight:10, ticksDistance: "+JXG.Options.axisScaleY,A+=", drawLabels: true, drawZero: true>>>>; ",A+=e.dest_sub_ids[3]+".visible = false; ",A+=e.dest_sub_ids[4]+".visible = false; ",A+="delete jxgBoard1_infobox; ",O="delete "+e.dest_sub_ids[4]+"; delete "+e.dest_sub_ids[3],O+="; delete "+e.dest_sub_ids[2]+"; ",O+="delete "+e.dest_sub_ids[1]+"; delete "+e.dest_sub_ids[0]+"; ";break;case JXG.GENTYPE_MID:A=i+"midpoint("+e.src_ids[0]+", "+e.src_ids[1]+") <<"+s,A+="fillColor: '"+e.args.fillColor+"'>>; ",O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_REFLECTION:A=i+"reflection("+e.src_ids[0]+", "+e.src_ids[1]+") <<"+s,A+="fillColor: '"+e.args.fillColor+"'>>; ",O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_MIRRORPOINT:A=i+"mirrorpoint("+e.src_ids[1]+", "+e.src_ids[0]+") <<"+s,A+="fillColor: '"+e.args.fillColor+"'>>; ",O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_TANGENT:e.args.create_point===!0?(c=e.dest_sub_ids[2],A="point("+D(e.args.usrCoords[1])+","+D(e.args.usrCoords[2])+") <<id: '",A+=c+"', fillColor: '"+e.args.fillColor+"'>>; "+c+".glide(",A+=e.src_ids[0]+"); ",O="delete "+c+"; "):c=e.src_ids[0],A+=i+"tangent("+c+") <<"+s+"point1: <<name: '"+e.dest_sub_ids[0],A+="', id: '"+e.dest_sub_ids[0]+"'>>, point2: <<name: '"+e.dest_sub_ids[1],A+="', id: '"+e.dest_sub_ids[1]+"'>> >>; ",O="delete "+e.dest_sub_ids[0]+"; "+O,O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[1]+"; "+O;break;case JXG.GENTYPE_PARALLEL:e.args.create_point===!0?(c=e.dest_sub_ids[1],A="point("+D(e.args.usrCoords[1])+", "+D(e.args.usrCoords[2])+") <<id: '",A+=c+"', name: '', visible: false, priv: true>>; ",O="delete "+c+"; "):c=e.src_ids[1],A+=i+"parallel("+e.src_ids[0]+", "+c+") <<"+s+"point: <<id: '",A+=e.dest_sub_ids[0]+"', name: '"+e.dest_sub_ids[0]+"'>> >>; ",O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[0]+"; "+O;break;case JXG.GENTYPE_BISECTORLINES:A="bisectorlines("+e.src_ids[0]+", "+e.src_ids[1]+") <<line1: <<id: '",A=A+e.dest_sub_ids[2]+"', point1: <<id: '"+e.dest_sub_ids[1],A+="', name: '"+e.dest_sub_ids[1]+"'>>, point2: <<id: '"+e.dest_sub_ids[0],A+="', name: '"+e.dest_sub_ids[0]+"'>>>>, line2: <<id: '"+e.dest_sub_ids[5],A+="', point1: <<id: '"+e.dest_sub_ids[4]+"', name: '"+e.dest_sub_ids[4],A+="'>>, point2: <<id: '"+e.dest_sub_ids[3]+"', name: '"+e.dest_sub_ids[3],A+="'>>>>>>; ",O="delete "+e.dest_sub_ids[5]+"; delete "+e.dest_sub_ids[4]+"; delete ",O+=e.dest_sub_ids[3]+"; delete "+e.dest_sub_ids[2]+"; delete ",O+=e.dest_sub_ids[1]+"; delete "+e.dest_sub_ids[0]+"; ";break;case JXG.GENTYPE_PERPENDICULAR_BISECTOR:e.args.create_line===!0?(c=e.dest_sub_ids[2],A="line("+e.src_ids[0]+", "+e.src_ids[1]+") <<id: '"+c,A+="', visible: true>>; ",O="delete "+c+"; "):c=e.src_ids[2],A+="midpoint("+e.src_ids[0]+", "+e.src_ids[1]+") <<id: '"+e.dest_sub_ids[0],A+="', fillColor: '"+e.args.fillColor+"'>>; ",A+=i+"normal("+e.dest_sub_ids[0]+", "+c+") <<"+s,A+=" point: <<id: '"+e.dest_sub_ids[1]+"', name: '"+e.dest_sub_ids[1],A+="'>> >>; ",O="delete "+e.dest_sub_ids[0]+"; "+O,O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[1]+"; "+O;break;case JXG.GENTYPE_BISECTOR:e.args.create_point===!0?(m=e.dest_sub_ids[1],A="point("+D(e.args.usrCoords[1])+", "+D(e.args.usrCoords[2])+") ",A+="<<id:'"+m+"', ",A+="name:'', priv:true, visible:false >>; ",A+=m+".glide("+e.src_ids[0]+");\n",O="delete "+m+"; ",g=e.dest_sub_ids[2],A+="point("+D(e.args.usrCoords[1])+", "+D(e.args.usrCoords[2])+") ",A+="<<id:'"+g+"', ",A+="name:'', priv:true, visible:false >>; ",A+=g+".glide("+e.src_ids[1]+");\n",O+="delete "+g+"; ",e.args.create_intersection?(y=e.dest_sub_ids[3],A+="intersection("+e.src_ids[0]+", "+e.src_ids[1]+", 0) ",A+="<<id:'"+y+"', fillColor: '"+e.args.fillColor+"', ",A+="name:'', priv:true, visible:false >>; \n",O+="delete "+y+"; "):y=e.src_ids[2],A+=i+"bisector("+m+", "+y+", "+g+") ",A+="<<"+s+"point: <<id: '"+e.dest_sub_ids[0]+"', priv: true, name: '",A+=e.dest_sub_ids[0]+"'>> >>; ",O+="delete "+e.dest_id+"; delete "+e.dest_sub_ids[0]+"; "):(A=i+"bisector("+e.src_ids[1]+", "+e.src_ids[2]+", "+e.src_ids[0],A+=") <<"+s+"point: <<id: '"+e.dest_sub_ids[0]+"', priv: true, name: '",A+=e.dest_sub_ids[0]+"'>>>>; ",O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[0]+"; ");break;case JXG.GENTYPE_NORMAL:e.args.create_point===!0?(c=e.dest_sub_ids[1],A="point("+D(e.args.usrCoords[1])+", "+D(e.args.usrCoords[2]),A+=") <<id: '"+c+"', name: '', visible: false, priv: true>>; ",O="delete "+c+"; "):c=e.src_ids[1],A+=i+"normal("+c+", "+e.src_ids[0]+") <<"+s,A+="point: <<id: '"+e.dest_sub_ids[0]+"', name: '"+e.dest_sub_ids[0],A+="'>> >>; ",O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[0]+"; "+O;break;case JXG.GENTYPE_POINT:A=i+"point("+D(e.args.usrCoords[1])+", "+D(e.args.usrCoords[2]),A+=")"+(r.useSymbols?"":" <<id: '"+e.dest_id+"'>>")+";",O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_GLIDER:r.useGlider?(A=i+"glider("+D(e.args.usrCoords[1])+", "+D(e.args.usrCoords[2]),A+=", "+e.src_ids[0]+")",A+=(r.useSymbols?"":"<<id: '"+e.dest_id+"'>>")+";"):(A=i+"point("+D(e.args.usrCoords[1])+", "+D(e.args.usrCoords[2]),A+=") <<"+s+" fillColor: '"+e.args.fillColor+"'>>; "+e.dest_id,A+=".glide("+e.src_ids[0]+"); "),O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_INTERSECTION:A=i+"intersection("+e.src_ids[0]+", "+e.src_ids[1]+", "+e.args.choice,A+=") <<"+s+" fillColor: '"+e.args.fillColor+"'>>; ",O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_CIRCLE:O="delete "+e.dest_sub_ids[0]+"; ",e.args.create_point===!0?(A="point("+D(e.args.usrCoords[1])+", "+D(e.args.usrCoords[2]),A+=") <<id: '"+e.dest_sub_ids[0]+"', priv: false>>; ",A+=i+"circle("+e.dest_sub_ids[0]+", "+e.src_ids[0]+") <<"+s,A+=" fillOpacity: "+JXG.Options.opacityLevel+" >>; ",O="delete "+e.dest_id+"; "+O):e.args.create_by_radius===!0?(A="point("+D(e.args.x)+", "+D(e.args.y)+") <<id: '"+e.dest_sub_ids[0],A+="', name: '', withLabel: true, visible: true, priv: false>>; ",A+=e.dest_sub_ids[0]+".visible = true; ",A+=i+"circle('"+e.dest_sub_ids[0]+"', "+D(e.args.r)+") <<"+s,A+=" fillOpacity: "+JXG.Options.opacityLevel+">>; ",O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[0]+"; "):(A=i+"circle("+e.src_ids[0]+", "+e.src_ids[1]+", "+e.src_ids[2],A+=") <<center: <<id: '"+e.dest_sub_ids[0]+"', name: '"+e.dest_sub_ids[0],A+="', visible: true>>, "+s+" fillOpacity: "+JXG.Options.opacityLevel+">>; ",O="delete "+e.dest_id+"; "+O);break;case JXG.GENTYPE_CIRCLE2POINTS:e.args.create_two_points===!0?(A="point("+D(e.args.x1)+", "+D(e.args.y1)+") <<id: '"+e.dest_sub_ids[0],A+="'>>; ",A+="point("+D(e.args.x2)+", "+D(e.args.y2)+") <<id: '",A+=e.dest_sub_ids[1]+"'>>; ",A+=i+"circle("+e.dest_sub_ids[0]+", "+e.dest_sub_ids[1]+") <<"+s,A+=" fillOpacity: "+JXG.Options.opacityLevel+">>; ",O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[1]+"; delete ",O+=e.dest_sub_ids[0]+"; "):e.args.create_point===!0?(A="point("+D(e.args.x)+", "+D(e.args.y)+") <<id: '"+e.dest_sub_ids[0],A+="'>>; ",A+=i+"circle("+e.dest_sub_ids[0]+", "+e.src_ids[0]+") <<"+s,A+=" fillOpacity: "+JXG.Options.opacityLevel+">>; ",O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[0]+"; "):e.args.create_by_radius===!0?(A=i+"circle("+e.src_ids[0]+", "+e.args.r+") <<"+s,A+=" fillOpacity: "+JXG.Options.opacityLevel+">>; ",O="delete "+e.dest_id+"; "):(A=i+"circle("+e.src_ids[0]+", "+e.src_ids[1]+") <<"+s,A+=" fillOpacity: "+JXG.Options.opacityLevel+">>; ",O="delete "+e.dest_id+"; ");break;case JXG.GENTYPE_LINE:l=0,f=0;if(e.args.create_point1){m=e.dest_sub_ids[l++],p=[];for(a=0;a<e.args.p1.length;a++)p[a]=D(e.args.p1[a]);A="point("+p.join(", ")+") <<id: '"+m+"', name: '', visible: false, ",A+="priv: true>>; ",O="delete "+m+"; "}else m=e.src_ids[f++];if(e.args.create_point2){g=e.dest_sub_ids[l++],p=[];for(a=0;a<e.args.p2.length;a++)p[a]=D(e.args.p2[a]);A+="point("+p.join(", ")+") <<id: '"+g+"', name: '', visible: false, ",A+="priv: true>>; ",O="delete "+g+"; "+O}else g=e.src_ids[f++];h="line",p="",d=m+", "+g;if(e.args.create_point1&&e.args.create_point2&&r.freeLine){A="",O="",e.args.p1.length===2&&e.args.p1.unshift(1),e.args.p2.length===2&&e.args.p2.unshift(1),d=JXG.Math.crossProduct(e.args.p1,e.args.p2);for(a=0;a<d.length;a++)d[a]=D(d[a]);d=d.join(", ")}!e.args.first&&!e.args.last?h="segment":(e.args.first||(p="straightFirst: "+e.args.first),e.args.last||(p="straightLast: "+e.args.last),p.length>0&&!r.useSymbols&&(p+=", ")),r.useSymbols||(s=" id: '"+e.dest_id+"' "),A+=i+h+"("+d+")",A+=(p.length+s.length>0?" <<"+p+s+">>":"")+";",O="delete "+e.dest_id+"; "+O;break;case JXG.GENTYPE_TRIANGLE:for(a=0;a<e.args.create_point.length;a++)e.args.create_point[a]===!0&&(A+="point("+D(e.args.coords[a].usrCoords[1])+", ",A+=D(e.args.coords[a].usrCoords[2])+") <<id: '"+e.dest_sub_ids[a],A+="'>>; ");for(a=0;a<e.dest_sub_ids.length;a++)e.dest_sub_ids[a]!==0&&(O="delete "+e.dest_sub_ids[a]+"; "+O);O="delete "+e.dest_id+"; "+O,A+=i+"polygon(";for(a=0;a<e.src_ids.length;a++)A+=e.src_ids[a],a<e.src_ids.length-1&&(A+=", ");for(a=0;a<3;a++)if(e.dest_sub_ids[a]!==0){if(e.src_ids.length>0||a>0)A+=", ";A+=e.dest_sub_ids[a]}A+=") <<borders: <<ids: [ '"+e.dest_sub_ids[3]+"', '"+e.dest_sub_ids[4],A+="', '"+e.dest_sub_ids[5]+"' ]>>, "+s+" fillOpacity: ",A+=JXG.Options.opacityLevel+", hasInnerPoints:true, scalable:true>>; ";break;case JXG.GENTYPE_QUADRILATERAL:for(a=0;a<e.args.create_point.length;a++)e.args.create_point[a]===!0&&(A+="point("+D(e.args.coords[a].usrCoords[1])+", ",A+=D(e.args.coords[a].usrCoords[2])+") <<id: '"+e.dest_sub_ids[a],A+="'>>; ");for(a=0;a<e.dest_sub_ids.length;a++)e.dest_sub_ids[a]!==0&&(O="delete "+e.dest_sub_ids[a]+"; "+O);O="delete "+e.dest_id+"; "+O,A+=i+"polygon(";for(a=0;a<e.src_ids.length;a++)A+=e.src_ids[a],a<e.src_ids.length-1&&(A+=", ");A+=") <<borders: <<ids: [ '"+e.dest_sub_ids[4]+"', '"+e.dest_sub_ids[5],A+="', '",A+=e.dest_sub_ids[6]+"', '"+e.dest_sub_ids[7]+"' ]>>, "+s,A+=" fillOpacity: ",A+=JXG.Options.opacityLevel+", hasInnerPoints:true, scalable:true>>; ";break;case JXG.GENTYPE_TEXT:A=i+"text("+D(e.args.x)+", "+D(e.args.y)+", "+e.args.str+") <<",A+=s+" name: '"+e.dest_id+"'>>; "+e.dest_id+".setText("+e.args.str,A+="); ",O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_POLYGON:A=i+"polygon(";for(a=0;a<e.src_ids.length;a++)A+=e.src_ids[a],a!=e.src_ids.length-1&&(A+=", ");A+=") <<borders: <<ids: [ '";for(a=0;a<e.dest_sub_ids.length;a++)A+=e.dest_sub_ids[a],a<e.dest_sub_ids.length-1&&(A+="', '");A+="' ]>>, "+s+" fillOpacity: "+JXG.Options.opacityLevel+" >>; ",O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_REGULARPOLYGON:A=i+"regularpolygon("+e.src_ids[0]+", "+e.src_ids[1]+", ",A+=e.args.corners+") <<borders: <<ids: [ ";for(a=0;a<e.args.corners;a++)A+="'"+e.dest_sub_ids[a]+"'",a!=e.args.corners-1&&(A+=", "),O="delete "+e.dest_sub_ids[a]+"; "+O;A+=" ]>>, vertices: <<ids: [ ";for(a=0;a<e.args.corners-2;a++)A+="'"+e.dest_sub_ids[a+parseInt(e.args.corners)]+"'",a!=e.args.corners-3&&(A+=", "),O="delete "+e.dest_sub_ids[a+parseInt(e.args.corners)]+"; "+O;A+=" ]>>, "+s+" fillOpacity: "+JXG.Options.opacityLevel+" >>; ",O="delete "+e.dest_id+"; "+O;break;case JXG.GENTYPE_SECTOR:A=i+"sector("+e.src_ids[0]+", "+e.src_ids[1]+", "+e.src_ids[2],A+=") <<",A+=s+" name: '"+e.dest_id+"', fillOpacity: "+JXG.Options.opacityLevel,A+=">>; ",O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_ANGLE:A=i+"angle("+e.src_ids[0]+", "+e.src_ids[1]+", "+e.src_ids[2]+") ",A+="<<radiuspoint: << priv:true, id: '"+e.dest_sub_ids[0]+"', name: '"+e.dest_sub_ids[0],A+="'>>, pointsquare: << priv:true, id: '"+e.dest_sub_ids[1]+"', name: '"+e.dest_sub_ids[1],A+="'>>, dot: << priv:true, id: '"+e.dest_sub_ids[2]+"', name: '"+e.dest_sub_ids[2],A+="'>>, ",A+=s+" fillOpacity: "+JXG.Options.opacityLevel+">>; ",O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[2]+"; delete ",O+=e.dest_sub_ids[1],O+="; delete "+e.dest_sub_ids[0]+"; ";break;case JXG.GENTYPE_PLOT:A=i+e.args.plot_type+"("+e.args.func+") <<",e.args.isPolar&&(A+="curveType: 'polar', "),A+=s+" name:'"+e.dest_id+"'>>; ",O="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_SLIDER:A=i+"slider(["+D(e.args.x1)+", "+D(e.args.y1)+"], ["+D(e.args.x2),A+=", "+D(e.args.y2)+"], ["+D(e.args.start)+", "+D(e.args.ini)+", ",A+=D(e.args.end)+"]) <<"+s+" name: '"+e.dest_id+"', baseline: <<id: '",A+=e.dest_sub_ids[0]+"', name: '"+e.dest_sub_ids[0]+"'>>, highline: <<id: '",A+=e.dest_sub_ids[1]+"', name: '"+e.dest_sub_ids[1]+"'>>, point1: <<id: '",A+=e.dest_sub_ids[2]+"', name: '"+e.dest_sub_ids[2]+"'>>, point2: <<id: '",A+=e.dest_sub_ids[3]+"', name: '"+e.dest_sub_ids[3]+"'>>, label: <<id: '",A+=e.dest_sub_ids[4]+"', name: '"+e.dest_sub_ids[4]+"'>>>>; ",O="delete "+e.dest_id+"; delete "+e.dest_sub_ids[4]+"; delete ",O+=e.dest_sub_ids[3]+"; delete "+e.dest_sub_ids[2]+"; delete ",O+=e.dest_sub_ids[1]+"; delete ",O+=e.dest_sub_ids[0]+"; ";break;case JXG.GENTYPE_DELETE:x=[],M=[],_=[];for(a=0;a<e.args.steps.length;a++)n[e.args.steps[a]].type>50?x=this.generateJCodeMeta(n[e.args.steps[a]],t):x=this.generateJCode(n[e.args.steps[a]],t,n),x[2].trim()!==""&&(A=x[2]+A),JXG.isFunction(x[3])&&M.unshift(x[3]),x[0].trim()!==""&&(O+=x[0]),JXG.isFunction(x[1])&&_.push(x[1]);break;case JXG.GENTYPE_COPY:L=[];for(E in e.args.steps)if(e.args.steps.hasOwnProperty(E)){k=JXG.deepCopy(n[e.args.steps[E]]);if(k.type==JXG.GENTYPE_COPY){for(a=0;a<k.args.map.length;a++)for(f=0;f<e.args.map.length;f++)k.args.map[a].copy==e.args.map[f].orig&&(k.args.map[a].copy=e.args.map[f].copy);k=JXG.SketchReader.replaceStepDestIds(k,k.args.map)}else k=JXG.SketchReader.replaceStepDestIds(k,e.args.map);L.push(k)}for(a=0;a<L.length;a++)L[a].type>50?x=this.generateJCodeMeta(L[a],t):x=this.generateJCode(L[a],t,n),x[0].trim()!==""&&(A+=x[0]),JXG.isFunction(x[1])&&M.push(x[1]),x[2].trim()!==""&&(O=x[2]+O),JXG.isFunction(x[3])&&_.unshift(x[3]);if(e.args.dep_copy)for(a=0;a<e.args.map.length;a++)P(e.args.map[a].orig).elementClass==JXG.OBJECT_CLASS_POINT&&(A+=e.args.map[a].copy,A+=".X = function() { return ("+e.args.map[a].orig+".X() - ",A+=D(e.args.x)+"); }; ",A+=e.args.map[a].copy,A+=".Y = function() { return ("+e.args.map[a].orig+".Y() - ",A+=D(e.args.y)+"); }; ");else for(a=0;a<e.args.free_points.length;a++)b=P(e.args.free_points[a].orig).coords.usrCoords[1],w=P(e.args.free_points[a].orig).coords.usrCoords[2],A+=e.args.free_points[a].copy+".X = function() { return ",A+=D(b-e.args.x)+"; }; ",A+=e.args.free_points[a].copy+".Y = function() { return ",A+=D(w-e.args.y)+"; }; ",A+=e.args.free_points[a].copy+".free(); ";for(f=0;f<e.args.map.length;f++)E=P(e.args.map[f].orig),E.type==JXG.OBJECT_TYPE_CIRCLE&&E.point2==null&&(A+=e.args.map[f].copy+".setRadius(function () { return ",A+=e.args.map[f].orig+".radius(); }); ");break;case JXG.GENTYPE_ABLATION:b=P(e.src_ids[0]).coords.usrCoords[1],w=P(e.src_ids[0]).coords.usrCoords[2],A="point("+D(b-e.args.x)+", "+D(w-e.args.y)+") <<id: '",A+=e.dest_sub_ids[0]+"'>>; ",A+="circle("+e.dest_sub_ids[0]+", 1) <<id: '"+e.dest_sub_ids[1],A+="', fillOpacity: "+JXG.Options.opacityLevel+", strokeColor: '#888888', visible: true>>; ",e.args.fids.length==1?e.args.func=e.args.fids[0]+".radius()":e.args.func="dist("+e.args.fids[0]+", "+e.args.fids[1]+")",A+=e.dest_sub_ids[1]+".setRadius(function() { return "+e.args.func+"; }); ",e.args.migrate!=0&&e.args.migrate!=-1?A+="$board.migratePoint("+e.dest_sub_ids[0]+", "+e.args.migrate+"); ":O+="delete "+e.dest_sub_ids[0]+"; ",O="delete "+e.dest_sub_ids[1]+"; "+O;break;case JXG.GENTYPE_MIGRATE:A+="$board.migratePoint("+e.src_ids[0]+", "+e.dest_id+"); ",O+="delete "+e.dest_id+"; ";break;case JXG.GENTYPE_TRANSFORM:A=e.dest_sub_ids[0]+" = transform("+e.args.tmat+") <<type: 'generic'>>; ",A+="point("+e.src_ids[0]+", "+e.dest_sub_ids[0]+") <<id: '"+e.dest_id,A+="', visible: true>>; ",O="delete "+e.dest_id+"; ",O+="delete "+e.dest_sub_ids[0]+"; ";break;case JXG.GENTYPE_MOVEMENT:if(e.args.obj_type==JXG.OBJECT_TYPE_LINE)A=e.src_ids[0]+".move(["+D(e.args.coords[0].usrCoords[0])+", ",A+=D(e.args.coords[0].usrCoords[1])+", "+D(e.args.coords[0].usrCoords[2])+"]); ",O=e.src_ids[0]+".move(["+e.args.zstart[0]+", "+e.args.xstart[0]+", ",O+=e.args.ystart[0]+"]); ",A+=e.src_ids[1]+".move(["+D(e.args.coords[1].usrCoords[0])+", ",A+=D(e.args.coords[1].usrCoords[1])+", "+D(e.args.coords[1].usrCoords[2])+"]); ",O+=e.src_ids[1]+".move(["+e.args.zstart[1]+", "+e.args.xstart[1]+", ",O+=e.args.ystart[1]+"]); ";else if(e.args.obj_type==JXG.OBJECT_TYPE_CIRCLE)A=e.src_ids[0]+".move(["+D(e.args.coords[0].usrCoords[1])+", ",A+=D(e.args.coords[0].usrCoords[2])+"]); ",O=e.src_ids[0]+".move(["+e.args.xstart+", "+e.args.ystart+"]); ",e.args.has_point2&&(A+=e.src_ids[1]+".move(["+D(e.args.coords[1].usrCoords[1])+", ",A+=D(e.args.coords[1].usrCoords[2])+"]); ",O+=e.src_ids[1]+".move(["+e.args.old_p2x+", "+e.args.old_p2y,O+="]); ");else if(e.args.obj_type==JXG.OBJECT_TYPE_GLIDER)A=e.src_ids[0]+".setPosition("+D(e.args.position)+"); ",O=e.src_ids[0]+".setPosition("+e.args.xstart+"); ";else if(e.args.obj_type==JXG.OBJECT_TYPE_POLYGON){A=O="";for(a=0;a<e.src_ids.length;a++)A+=e.src_ids[a]+".move(["+D(e.args.coords[a].usrCoords[1])+", ",A+=D(e.args.coords[a].usrCoords[2])+"]); ",O+=e.src_ids[a]+".move(["+e.args.xstart[a]+", "+e.args.ystart[a],O+="]); "}else A=e.src_ids[0]+".move(["+D(e.args.coords[0].usrCoords[1])+", ",A+=D(e.args.coords[0].usrCoords[2])+"]); ",O=e.src_ids[0]+".move(["+e.args.xstart+", "+e.args.ystart+"]); ";break;default:return}return[A,M,O,_]},replaceStepDestIds:function(e,t){var n,r,i=[];for(n=0;n<t.length;n++){i.push(t[n].copy),e.dest_id==t[n].orig&&(e.dest_id=t[n].copy);for(r=0;r<e.dest_sub_ids.length;r++)e.dest_sub_ids[r]==t[n].orig&&(e.dest_sub_ids[r]=t[n].copy);for(r=0;r<e.src_ids.length;r++)e.src_ids[r]==t[n].orig&&(e.src_ids[r]=t[n].copy)}for(r=0;r<e.dest_sub_ids.length;r++)JXG.isInArray(i,e.dest_sub_ids[r])||(e.dest_sub_ids[r]=this.id());return e.src_ids=JXG.uniqueArray(e.src_ids),e.dest_sub_ids=JXG.uniqueArray(e.dest_sub_ids),e},readSketch:function(e,t){var n,r,i,s,o,u,a;o=(new JXG.Util.Unzip(JXG.Util.Base64.decodeAsArray(e))).unzip();if(!JXG.exists(o[0]))return"";o=JXG.Util.utf8Decode(o[0][0]),a=JSON.parse(o);for(n=0;n<a.length-1;n++){if(a[n].type==0)continue;if(a[n].type==JXG.GENTYPE_CTX_VISIBILITY&&a[n].args.isGrid)continue;if(a[n].type==JXG.GENTYPE_GRID)continue;a[n].type==27&&(a[n].type=JXG.GENTYPE_DELETE),a[n].type==31&&(a[n].type=JXG.GENTYPE_ABLATION),a[n]>50?i=this.generateJCodeMeta(a[n],t):i=this.generateJCode(a[n],t,a),t.jc.parse(i[0],!0)}return u=a.pop(),i=u.boundingBox,t.setBoundingBox(i),t.options.grid.snapToGrid=!u.snapToGrid,t.options.point.snapToGrid=!u.snapToGrid,t.options.point.snapToPoints=!u.snapToPoints,""}}});
