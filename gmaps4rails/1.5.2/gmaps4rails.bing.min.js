(function(){var e=Object.prototype.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t};this.Gmaps4RailsBing=function(e){function n(){n.__super__.constructor.apply(this,arguments),this.map_options={type:"road"},this.markers_conf={infobox:"description"},this.mergeWithDefault("map_options"),this.mergeWithDefault("markers_conf")}return t(n,e),n.prototype.getMapType=function(){switch(this.map_options.type){case"road":return Microsoft.Maps.MapTypeId.road;case"aerial":return Microsoft.Maps.MapTypeId.aerial;case"auto":return Microsoft.Maps.MapTypeId.auto;case"birdseye":return Microsoft.Maps.MapTypeId.birdseye;case"collinsBart":return Microsoft.Maps.MapTypeId.collinsBart;case"mercator":return Microsoft.Maps.MapTypeId.mercator;case"ordnanceSurvey":return Microsoft.Maps.MapTypeId.ordnanceSurvey;default:return Microsoft.Maps.MapTypeId.auto}},n.prototype.createPoint=function(e,t){return new Microsoft.Maps.Point(e,t)},n.prototype.createLatLng=function(e,t){return new Microsoft.Maps.Location(e,t)},n.prototype.createLatLngBounds=function(){},n.prototype.createMap=function(){return new Microsoft.Maps.Map(document.getElementById(this.map_options.id),{credentials:this.map_options.provider_key,mapTypeId:this.getMapType(),center:this.createLatLng(this.map_options.center_latitude,this.map_options.center_longitude),zoom:this.map_options.zoom})},n.prototype.createSize=function(e,t){return new google.maps.Size(e,t)},n.prototype.createMarker=function(e){var t,n;return n=this.createLatLng(e.Lat,e.Lng),t=""===e.marker_picture?new Microsoft.Maps.Pushpin(this.createLatLng(e.Lat,e.Lng),{draggable:e.marker_draggable,anchor:this.createImageAnchorPosition(e.Lat,e.Lng),text:e.marker_title}):new Microsoft.Maps.Pushpin(this.createLatLng(e.Lat,e.Lng),{draggable:e.marker_draggable,anchor:this.createImageAnchorPosition(e.Lat,e.Lng),icon:e.marker_picture,height:e.marker_height,text:e.marker_title,width:e.marker_width}),this.addToMap(t),t},n.prototype.clearMarkers=function(){var e,t,n,i,r;for(i=this.markers,r=[],t=0,n=i.length;n>t;t++)e=i[t],r.push(this.clearMarker(e));return r},n.prototype.clearMarker=function(e){return this.removeFromMap(e.serviceObject)},n.prototype.showMarkers=function(){var e,t,n,i,r;for(i=this.markers,r=[],t=0,n=i.length;n>t;t++)e=i[t],r.push(this.showMarker(e));return r},n.prototype.showMarker=function(e){return e.serviceObject.setOptions({visible:!0})},n.prototype.hideMarkers=function(){var e,t,n,i,r;for(i=this.markers,r=[],t=0,n=i.length;n>t;t++)e=i[t],r.push(this.hideMarker(e));return r},n.prototype.hideMarker=function(e){return e.serviceObject.setOptions({visible:!1})},n.prototype.extendBoundsWithMarkers=function(){var e,t,n,i,r;for(e=[],r=this.markers,n=0,i=r.length;i>n;n++)t=r[n],e.push(t.serviceObject.getLocation());return this.boundsObject=Microsoft.Maps.LocationRect.fromLocations(e)},n.prototype.createClusterer=function(){},n.prototype.clearClusterer=function(){},n.prototype.clusterize=function(){},n.prototype.createInfoWindow=function(e){var t;return null!=e.description?(e.info_window="description"===this.markers_conf.infobox?new Microsoft.Maps.Infobox(e.serviceObject.getLocation(),{description:e.description,visible:!1,showCloseButton:!0}):new Microsoft.Maps.Infobox(e.serviceObject.getLocation(),{htmlContent:e.description,visible:!1}),t=this,Microsoft.Maps.Events.addHandler(e.serviceObject,"click",this.openInfoWindow(t,e.info_window)),this.addToMap(e.info_window)):void 0},n.prototype.openInfoWindow=function(e,t){return function(){return e.visibleInfoWindow&&e.visibleInfoWindow.setOptions({visible:!1}),t.setOptions({visible:!0}),e.visibleInfoWindow=t}},n.prototype.fitBounds=function(){return this.serviceObject.setView({bounds:this.boundsObject})},n.prototype.addToMap=function(e){return this.serviceObject.entities.push(e)},n.prototype.removeFromMap=function(e){return this.serviceObject.entities.remove(e)},n.prototype.centerMapOnUser=function(){return this.serviceObject.setView({center:this.userLocation})},n}(Gmaps4Rails)}).call(this);