Proj4js.Proj.ortho={init:function(){this.sin_p14=Math.sin(this.lat0),this.cos_p14=Math.cos(this.lat0)},forward:function(e){var t,i,n,r,s,o,a=e.x,l=e.y;if(n=Proj4js.common.adjust_lon(a-this.long0),t=Math.sin(l),i=Math.cos(l),r=Math.cos(n),o=this.sin_p14*t+this.cos_p14*i*r,s=1,o>0||Math.abs(o)<=Proj4js.common.EPSLN)var h=this.a*s*i*Math.sin(n),c=this.y0+this.a*s*(this.cos_p14*t-this.sin_p14*i*r);else Proj4js.reportError("orthoFwdPointError");return e.x=h,e.y=c,e},inverse:function(e){var t,i,n,r,s,o,a;return e.x-=this.x0,e.y-=this.y0,t=Math.sqrt(e.x*e.x+e.y*e.y),t>this.a+1e-7&&Proj4js.reportError("orthoInvDataError"),i=Proj4js.common.asinz(t/this.a),n=Math.sin(i),r=Math.cos(i),o=this.long0,Math.abs(t)<=Proj4js.common.EPSLN&&(a=this.lat0),a=Proj4js.common.asinz(r*this.sin_p14+e.y*n*this.cos_p14/t),s=Math.abs(this.lat0)-Proj4js.common.HALF_PI,Math.abs(s)<=Proj4js.common.EPSLN&&(o=this.lat0>=0?Proj4js.common.adjust_lon(this.long0+Math.atan2(e.x,-e.y)):Proj4js.common.adjust_lon(this.long0-Math.atan2(-e.x,e.y))),s=r-this.sin_p14*Math.sin(a),e.x=o,e.y=a,e}};