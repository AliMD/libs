OpenLayers.Control.Snapping=OpenLayers.Class(OpenLayers.Control,{DEFAULTS:{tolerance:10,node:!0,edge:!0,vertex:!0},greedy:!0,precedence:["node","vertex","edge"],resolution:null,geoToleranceCache:null,layer:null,feature:null,point:null,initialize:function(e){OpenLayers.Control.prototype.initialize.apply(this,[e]),this.options=e||{},this.options.layer&&this.setLayer(this.options.layer);var t=OpenLayers.Util.extend({},this.options.defaults);this.defaults=OpenLayers.Util.applyDefaults(t,this.DEFAULTS),this.setTargets(this.options.targets),0===this.targets.length&&this.layer&&this.addTargetLayer(this.layer),this.geoToleranceCache={}},setLayer:function(e){this.active?(this.deactivate(),this.layer=e,this.activate()):this.layer=e},setTargets:function(e){if(this.targets=[],e&&e.length)for(var t,i=0,n=e.length;n>i;++i)t=e[i],t instanceof OpenLayers.Layer.Vector?this.addTargetLayer(t):this.addTarget(t)},addTargetLayer:function(e){this.addTarget({layer:e})},addTarget:function(e){e=OpenLayers.Util.applyDefaults(e,this.defaults),e.nodeTolerance=e.nodeTolerance||e.tolerance,e.vertexTolerance=e.vertexTolerance||e.tolerance,e.edgeTolerance=e.edgeTolerance||e.tolerance,this.targets.push(e)},removeTargetLayer:function(e){for(var t,i=this.targets.length-1;i>=0;--i)t=this.targets[i],t.layer===e&&this.removeTarget(t)},removeTarget:function(e){return OpenLayers.Util.removeItem(this.targets,e)},activate:function(){var e=OpenLayers.Control.prototype.activate.call(this);return e&&this.layer&&this.layer.events&&this.layer.events.on({sketchstarted:this.onSketchModified,sketchmodified:this.onSketchModified,vertexmodified:this.onVertexModified,scope:this}),e},deactivate:function(){var e=OpenLayers.Control.prototype.deactivate.call(this);return e&&this.layer&&this.layer.events&&this.layer.events.un({sketchstarted:this.onSketchModified,sketchmodified:this.onSketchModified,vertexmodified:this.onVertexModified,scope:this}),this.feature=null,this.point=null,e},onSketchModified:function(e){this.feature=e.feature,this.considerSnapping(e.vertex,e.vertex)},onVertexModified:function(e){this.feature=e.feature;var t=this.layer.map.getLonLatFromViewPortPx(e.pixel);this.considerSnapping(e.vertex,new OpenLayers.Geometry.Point(t.lon,t.lat))},considerSnapping:function(e,t){for(var i,n,r={rank:Number.POSITIVE_INFINITY,dist:Number.POSITIVE_INFINITY,x:null,y:null},o=!1,s=0,a=this.targets.length;a>s;++s)if(n=this.targets[s],i=this.testTarget(n,t)){if(this.greedy){r=i,r.target=n,o=!0;break}(i.rank<r.rank||i.rank===r.rank&&i.dist<r.dist)&&(r=i,r.target=n,o=!0)}if(o){var l=this.events.triggerEvent("beforesnap",{point:e,x:r.x,y:r.y,distance:r.dist,layer:r.target.layer,snapType:this.precedence[r.rank]});l!==!1?(e.x=r.x,e.y=r.y,this.point=e,this.events.triggerEvent("snap",{point:e,snapType:this.precedence[r.rank],layer:r.target.layer,distance:r.dist})):o=!1}this.point&&!o&&(e.x=t.x,e.y=t.y,this.point=null,this.events.triggerEvent("unsnap",{point:e}))},testTarget:function(e,t){var i=this.layer.map.getResolution();if("minResolution"in e&&e.minResolution>i)return null;if("maxResolution"in e&&i>=e.maxResolution)return null;for(var n,r,o,s,a,l,h,c={node:this.getGeoTolerance(e.nodeTolerance,i),vertex:this.getGeoTolerance(e.vertexTolerance,i),edge:this.getGeoTolerance(e.edgeTolerance,i)},u=Math.max(c.node,c.vertex,c.edge),d={rank:Number.POSITIVE_INFINITY,dist:Number.POSITIVE_INFINITY},p=!1,f=e.layer.features,m=this.precedence.length,g=new OpenLayers.LonLat(t.x,t.y),y=0,v=f.length;v>y;++y)if(n=f[y],n!==this.feature&&!n._sketch&&n.state!==OpenLayers.State.DELETE&&(!e.filter||e.filter.evaluate(n))&&n.atPoint(g,u,u))for(var b=0,L=Math.min(d.rank+1,m);L>b;++b)if(r=this.precedence[b],e[r])if("edge"===r){if(a=n.geometry.distanceTo(t,{details:!0}),l=a.distance,c[r]>=l&&d.dist>l){d={rank:b,dist:l,x:a.x0,y:a.y0},p=!0;break}}else{o=n.geometry.getVertices("node"===r),h=!1;for(var x=0,C=o.length;C>x;++x)s=o[x],l=s.distanceTo(t),c[r]>=l&&(d.rank>b||b===d.rank&&d.dist>l)&&(d={rank:b,dist:l,x:s.x,y:s.y},p=!0,h=!0);if(h)break}return p?d:null},getGeoTolerance:function(e,t){t!==this.resolution&&(this.resolution=t,this.geoToleranceCache={});var i=this.geoToleranceCache[e];return void 0===i&&(i=e*t,this.geoToleranceCache[e]=i),i},destroy:function(){this.active&&this.deactivate(),delete this.layer,delete this.targets,OpenLayers.Control.prototype.destroy.call(this)},CLASS_NAME:"OpenLayers.Control.Snapping"});