OpenLayers.Control.ModifyFeature=OpenLayers.Class(OpenLayers.Control,{geometryTypes:null,clickout:!0,toggle:!0,standalone:!1,layer:null,feature:null,vertices:null,virtualVertices:null,selectControl:null,dragControl:null,handlers:null,deleteCodes:null,virtualStyle:null,vertexRenderIntent:null,mode:null,createVertices:!0,modified:!1,radiusHandle:null,dragHandle:null,onModificationStart:function(){},onModification:function(){},onModificationEnd:function(){},initialize:function(e,t){t=t||{},this.layer=e,this.vertices=[],this.virtualVertices=[],this.virtualStyle=OpenLayers.Util.extend({},this.layer.style||this.layer.styleMap.createSymbolizer(null,t.vertexRenderIntent)),this.virtualStyle.fillOpacity=.3,this.virtualStyle.strokeOpacity=.3,this.deleteCodes=[46,68],this.mode=OpenLayers.Control.ModifyFeature.RESHAPE,OpenLayers.Control.prototype.initialize.apply(this,[t]),OpenLayers.Util.isArray(this.deleteCodes)||(this.deleteCodes=[this.deleteCodes]);var i=this,n={geometryTypes:this.geometryTypes,clickout:this.clickout,toggle:this.toggle,onBeforeSelect:this.beforeSelectFeature,onSelect:this.selectFeature,onUnselect:this.unselectFeature,scope:this};this.standalone===!1&&(this.selectControl=new OpenLayers.Control.SelectFeature(e,n));var r={geometryTypes:["OpenLayers.Geometry.Point"],onStart:function(e,t){i.dragStart.apply(i,[e,t])},onDrag:function(e,t){i.dragVertex.apply(i,[e,t])},onComplete:function(e){i.dragComplete.apply(i,[e])},featureCallbacks:{over:function(e){(i.standalone!==!0||e._sketch||i.feature===e)&&i.dragControl.overFeature.apply(i.dragControl,[e])}}};this.dragControl=new OpenLayers.Control.DragFeature(e,r);var o={keydown:this.handleKeypress};this.handlers={keyboard:new OpenLayers.Handler.Keyboard(this,o)}},destroy:function(){this.layer=null,this.standalone||this.selectControl.destroy(),this.dragControl.destroy(),OpenLayers.Control.prototype.destroy.apply(this,[])},activate:function(){return(this.standalone||this.selectControl.activate())&&this.handlers.keyboard.activate()&&OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){var e=!1;if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){this.layer.removeFeatures(this.vertices,{silent:!0}),this.layer.removeFeatures(this.virtualVertices,{silent:!0}),this.vertices=[],this.dragControl.deactivate();var t=this.feature,i=t&&t.geometry&&t.layer;this.standalone===!1?(i&&this.selectControl.unselect.apply(this.selectControl,[t]),this.selectControl.deactivate()):i&&this.unselectFeature(t),this.handlers.keyboard.deactivate(),e=!0}return e},beforeSelectFeature:function(e){return this.layer.events.triggerEvent("beforefeaturemodified",{feature:e})},selectFeature:function(e){this.standalone&&this.beforeSelectFeature(e)===!1||(this.feature=e,this.modified=!1,this.resetVertices(),this.dragControl.activate(),this.onModificationStart(this.feature));var t=e.modified;!e.geometry||t&&t.geometry||(this._originalGeometry=e.geometry.clone())},unselectFeature:function(e){this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[],this.layer.destroyFeatures(this.virtualVertices,{silent:!0}),this.virtualVertices=[],this.dragHandle&&(this.layer.destroyFeatures([this.dragHandle],{silent:!0}),delete this.dragHandle),this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),delete this.radiusHandle),this.feature=null,this.dragControl.deactivate(),this.onModificationEnd(e),this.layer.events.triggerEvent("afterfeaturemodified",{feature:e,modified:this.modified}),this.modified=!1},dragStart:function(e,t){e==this.feature||e.geometry.parent||e==this.dragHandle||e==this.radiusHandle||(this.standalone===!1&&this.feature&&this.selectControl.clickFeature.apply(this.selectControl,[this.feature]),(null==this.geometryTypes||-1!=OpenLayers.Util.indexOf(this.geometryTypes,e.geometry.CLASS_NAME))&&(this.standalone||this.selectControl.clickFeature.apply(this.selectControl,[e]),this.dragControl.overFeature.apply(this.dragControl,[e]),this.dragControl.lastPixel=t,this.dragControl.handlers.drag.started=!0,this.dragControl.handlers.drag.start=t,this.dragControl.handlers.drag.last=t))},dragVertex:function(e,t){this.modified=!0,"OpenLayers.Geometry.Point"==this.feature.geometry.CLASS_NAME?(this.feature!=e&&(this.feature=e),this.layer.events.triggerEvent("vertexmodified",{vertex:e.geometry,feature:this.feature,pixel:t})):(e._index?(e.geometry.parent.addComponent(e.geometry,e._index),delete e._index,OpenLayers.Util.removeItem(this.virtualVertices,e),this.vertices.push(e)):e==this.dragHandle?(this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[],this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),this.radiusHandle=null)):e!==this.radiusHandle&&this.layer.events.triggerEvent("vertexmodified",{vertex:e.geometry,feature:this.feature,pixel:t}),this.virtualVertices.length>0&&(this.layer.destroyFeatures(this.virtualVertices,{silent:!0}),this.virtualVertices=[]),this.layer.drawFeature(this.feature,this.standalone?void 0:this.selectControl.renderIntent)),this.layer.drawFeature(e)},dragComplete:function(){this.resetVertices(),this.setFeatureState(),this.onModification(this.feature),this.layer.events.triggerEvent("featuremodified",{feature:this.feature})},setFeatureState:function(){if(this.feature.state!=OpenLayers.State.INSERT&&this.feature.state!=OpenLayers.State.DELETE&&(this.feature.state=OpenLayers.State.UPDATE,this.modified&&this._originalGeometry)){var e=this.feature;e.modified=OpenLayers.Util.extend(e.modified,{geometry:this._originalGeometry}),delete this._originalGeometry}},resetVertices:function(){this.dragControl.feature&&this.dragControl.outFeature(this.dragControl.feature),this.vertices.length>0&&(this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[]),this.virtualVertices.length>0&&(this.layer.removeFeatures(this.virtualVertices,{silent:!0}),this.virtualVertices=[]),this.dragHandle&&(this.layer.destroyFeatures([this.dragHandle],{silent:!0}),this.dragHandle=null),this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),this.radiusHandle=null),this.feature&&"OpenLayers.Geometry.Point"!=this.feature.geometry.CLASS_NAME&&(this.mode&OpenLayers.Control.ModifyFeature.DRAG&&this.collectDragHandle(),this.mode&(OpenLayers.Control.ModifyFeature.ROTATE|OpenLayers.Control.ModifyFeature.RESIZE)&&this.collectRadiusHandle(),this.mode&OpenLayers.Control.ModifyFeature.RESHAPE&&(this.mode&OpenLayers.Control.ModifyFeature.RESIZE||this.collectVertices()))},handleKeypress:function(e){var t=e.keyCode;if(this.feature&&-1!=OpenLayers.Util.indexOf(this.deleteCodes,t)){var i=this.dragControl.feature;i&&-1!=OpenLayers.Util.indexOf(this.vertices,i)&&!this.dragControl.handlers.drag.dragging&&i.geometry.parent&&(i.geometry.parent.removeComponent(i.geometry),this.layer.events.triggerEvent("vertexremoved",{vertex:i.geometry,feature:this.feature,pixel:e.xy}),this.layer.drawFeature(this.feature,this.standalone?void 0:this.selectControl.renderIntent),this.modified=!0,this.resetVertices(),this.setFeatureState(),this.onModification(this.feature),this.layer.events.triggerEvent("featuremodified",{feature:this.feature}))}},collectVertices:function(){function e(i){var n,r,o,s;if("OpenLayers.Geometry.Point"==i.CLASS_NAME)r=new OpenLayers.Feature.Vector(i),r._sketch=!0,r.renderIntent=t.vertexRenderIntent,t.vertices.push(r);else{var a=i.components.length;for("OpenLayers.Geometry.LinearRing"==i.CLASS_NAME&&(a-=1),n=0;a>n;++n)o=i.components[n],"OpenLayers.Geometry.Point"==o.CLASS_NAME?(r=new OpenLayers.Feature.Vector(o),r._sketch=!0,r.renderIntent=t.vertexRenderIntent,t.vertices.push(r)):e(o);if(t.createVertices&&"OpenLayers.Geometry.MultiPoint"!=i.CLASS_NAME)for(n=0,s=i.components.length;s-1>n;++n){var l=i.components[n],h=i.components[n+1];if("OpenLayers.Geometry.Point"==l.CLASS_NAME&&"OpenLayers.Geometry.Point"==h.CLASS_NAME){var c=(l.x+h.x)/2,u=(l.y+h.y)/2,d=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(c,u),null,t.virtualStyle);d.geometry.parent=i,d._index=n+1,d._sketch=!0,t.virtualVertices.push(d)}}}}this.vertices=[],this.virtualVertices=[];var t=this;e.call(this,this.feature.geometry),this.layer.addFeatures(this.virtualVertices,{silent:!0}),this.layer.addFeatures(this.vertices,{silent:!0})},collectDragHandle:function(){var e=this.feature.geometry,t=e.getBounds().getCenterLonLat(),i=new OpenLayers.Geometry.Point(t.lon,t.lat),n=new OpenLayers.Feature.Vector(i);i.move=function(t,i){OpenLayers.Geometry.Point.prototype.move.call(this,t,i),e.move(t,i)},n._sketch=!0,this.dragHandle=n,this.dragHandle.renderIntent=this.vertexRenderIntent,this.layer.addFeatures([this.dragHandle],{silent:!0})},collectRadiusHandle:function(){var e=this.feature.geometry,t=e.getBounds(),i=t.getCenterLonLat(),n=new OpenLayers.Geometry.Point(i.lon,i.lat),r=new OpenLayers.Geometry.Point(t.right,t.bottom),o=new OpenLayers.Feature.Vector(r),s=this.mode&OpenLayers.Control.ModifyFeature.RESIZE,a=this.mode&OpenLayers.Control.ModifyFeature.RESHAPE,l=this.mode&OpenLayers.Control.ModifyFeature.ROTATE;r.move=function(t,i){OpenLayers.Geometry.Point.prototype.move.call(this,t,i);var r=this.x-n.x,o=this.y-n.y,h=r-t,c=o-i;if(l){var u=Math.atan2(c,h),d=Math.atan2(o,r),p=d-u;p*=180/Math.PI,e.rotate(p,n)}if(s){var f,m;if(a)f=o/c,m=r/h/f;else{var g=Math.sqrt(h*h+c*c),y=Math.sqrt(r*r+o*o);f=y/g}e.resize(f,n,m)}},o._sketch=!0,this.radiusHandle=o,this.radiusHandle.renderIntent=this.vertexRenderIntent,this.layer.addFeatures([this.radiusHandle],{silent:!0})},setMap:function(e){this.standalone||this.selectControl.setMap(e),this.dragControl.setMap(e),OpenLayers.Control.prototype.setMap.apply(this,arguments)},CLASS_NAME:"OpenLayers.Control.ModifyFeature"}),OpenLayers.Control.ModifyFeature.RESHAPE=1,OpenLayers.Control.ModifyFeature.RESIZE=2,OpenLayers.Control.ModifyFeature.ROTATE=4,OpenLayers.Control.ModifyFeature.DRAG=8;