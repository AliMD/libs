OpenLayers.Format.KML=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{kml:"http://www.opengis.net/kml/2.2",gx:"http://www.google.com/kml/ext/2.2"},kmlns:"http://earth.google.com/kml/2.0",placemarksDesc:"No description available",foldersName:"OpenLayers export",foldersDesc:"Exported on "+new Date,extractAttributes:!0,kvpAttributes:!1,extractStyles:!1,extractTracks:!1,trackAttributes:null,internalns:null,features:null,styles:null,styleBaseUrl:"",fetched:null,maxDepth:0,initialize:function(e){this.regExes={trimSpace:/^\s*|\s*$/g,removeSpace:/\s*/g,splitSpace:/\s+/,trimComma:/\s*,\s*/g,kmlColor:/(\w{2})(\w{2})(\w{2})(\w{2})/,kmlIconPalette:/root:\/\/icons\/palette-(\d+)(\.\w+)/,straightBracket:/\$\[(.*?)\]/g},this.externalProjection=new OpenLayers.Projection("EPSG:4326"),OpenLayers.Format.XML.prototype.initialize.apply(this,[e])},read:function(e){this.features=[],this.styles={},this.fetched={};var t={depth:0,styleBaseUrl:this.styleBaseUrl};return this.parseData(e,t)},parseData:function(e,t){"string"==typeof e&&(e=OpenLayers.Format.XML.prototype.read.apply(this,[e]));for(var i=["Link","NetworkLink","Style","StyleMap","Placemark"],n=0,r=i.length;r>n;++n){var o=i[n],s=this.getElementsByTagNameNS(e,"*",o);if(0!=s.length)switch(o.toLowerCase()){case"link":case"networklink":this.parseLinks(s,t);break;case"style":this.extractStyles&&this.parseStyles(s,t);break;case"stylemap":this.extractStyles&&this.parseStyleMaps(s,t);break;case"placemark":this.parseFeatures(s,t)}}return this.features},parseLinks:function(e,t){if(t.depth>=this.maxDepth)return!1;var i=OpenLayers.Util.extend({},t);i.depth++;for(var n=0,r=e.length;r>n;n++){var o=this.parseProperty(e[n],"*","href");if(o&&!this.fetched[o]){this.fetched[o]=!0;var s=this.fetchLink(o);s&&this.parseData(s,i)}}},fetchLink:function(e){var t=OpenLayers.Request.GET({url:e,async:!1});return t?t.responseText:void 0},parseStyles:function(e,t){for(var i=0,n=e.length;n>i;i++){var r=this.parseStyle(e[i]);if(r){var o=(t.styleBaseUrl||"")+"#"+r.id;this.styles[o]=r}}},parseKmlColor:function(e){var t=null;if(e){var i=e.match(this.regExes.kmlColor);i&&(t={color:"#"+i[4]+i[3]+i[2],opacity:parseInt(i[1],16)/255})}return t},parseStyle:function(e){for(var t,i,n={},r=["LineStyle","PolyStyle","IconStyle","BalloonStyle","LabelStyle"],o=0,s=r.length;s>o;++o)if(t=r[o],i=this.getElementsByTagNameNS(e,"*",t)[0])switch(t.toLowerCase()){case"linestyle":var a=this.parseProperty(i,"*","color"),l=this.parseKmlColor(a);l&&(n.strokeColor=l.color,n.strokeOpacity=l.opacity);var h=this.parseProperty(i,"*","width");h&&(n.strokeWidth=h);break;case"polystyle":var a=this.parseProperty(i,"*","color"),l=this.parseKmlColor(a);l&&(n.fillOpacity=l.opacity,n.fillColor=l.color);var c=this.parseProperty(i,"*","fill");"0"==c&&(n.fillColor="none");var u=this.parseProperty(i,"*","outline");"0"==u&&(n.strokeWidth="0");break;case"iconstyle":var d=parseFloat(this.parseProperty(i,"*","scale")||1),h=32*d,p=32*d,f=this.getElementsByTagNameNS(i,"*","Icon")[0];if(f){var m=this.parseProperty(f,"*","href");if(m){var g=this.parseProperty(f,"*","w"),y=this.parseProperty(f,"*","h"),v="http://maps.google.com/mapfiles/kml";!OpenLayers.String.startsWith(m,v)||g||y||(g=64,y=64,d/=2),g=g||y,y=y||g,g&&(h=parseInt(g)*d),y&&(p=parseInt(y)*d);var b=m.match(this.regExes.kmlIconPalette);if(b){var L=b[1],x=b[2],C=this.parseProperty(f,"*","x"),w=this.parseProperty(f,"*","y"),S=C?C/32:0,O=w?7-w/32:7,_=8*O+S;m="http://maps.google.com/mapfiles/kml/pal"+L+"/icon"+_+x}n.graphicOpacity=1,n.externalGraphic=m}}var E=this.getElementsByTagNameNS(i,"*","hotSpot")[0];if(E){var C=parseFloat(E.getAttribute("x")),w=parseFloat(E.getAttribute("y")),T=E.getAttribute("xunits");"pixels"==T?n.graphicXOffset=-C*d:"insetPixels"==T?n.graphicXOffset=-h+C*d:"fraction"==T&&(n.graphicXOffset=-h*C);var k=E.getAttribute("yunits");"pixels"==k?n.graphicYOffset=-p+w*d+1:"insetPixels"==k?n.graphicYOffset=-(w*d)+1:"fraction"==k&&(n.graphicYOffset=-p*(1-w)+1)}n.graphicWidth=h,n.graphicHeight=p;break;case"balloonstyle":var P=OpenLayers.Util.getXmlNodeValue(i);P&&(n.balloonStyle=P.replace(this.regExes.straightBracket,"${$1}"));break;case"labelstyle":var a=this.parseProperty(i,"*","color"),l=this.parseKmlColor(a);l&&(n.fontColor=l.color,n.fontOpacity=l.opacity);break;default:}!n.strokeColor&&n.fillColor&&(n.strokeColor=n.fillColor);var A=e.getAttribute("id");return A&&n&&(n.id=A),n},parseStyleMaps:function(e,t){for(var i=0,n=e.length;n>i;i++)for(var r=e[i],o=this.getElementsByTagNameNS(r,"*","Pair"),s=r.getAttribute("id"),a=0,l=o.length;l>a;a++){var h=o[a],c=this.parseProperty(h,"*","key"),u=this.parseProperty(h,"*","styleUrl");u&&"normal"==c&&(this.styles[(t.styleBaseUrl||"")+"#"+s]=this.styles[(t.styleBaseUrl||"")+u])}},parseFeatures:function(e,t){for(var i=[],n=0,r=e.length;r>n;n++){var o=e[n],s=this.parseFeature.apply(this,[o]);if(!s)throw"Bad Placemark: "+n;if(this.extractStyles&&s.attributes&&s.attributes.styleUrl&&(s.style=this.getStyle(s.attributes.styleUrl,t)),this.extractStyles){var a=this.getElementsByTagNameNS(o,"*","Style")[0];if(a){var l=this.parseStyle(a);l&&(s.style=OpenLayers.Util.extend(s.style,l))}}if(this.extractTracks){var h=this.getElementsByTagNameNS(o,this.namespaces.gx,"Track");if(h&&h.length>0){var c=h[0],u={features:[],feature:s};this.readNode(c,u),u.features.length>0&&i.push.apply(i,u.features)}}else i.push(s)}this.features=this.features.concat(i)},readers:{kml:{when:function(e,t){t.whens.push(OpenLayers.Date.parse(this.getChildValue(e)))},_trackPointAttribute:function(e,t){var i=e.nodeName.split(":").pop();t.attributes[i].push(this.getChildValue(e))}},gx:{Track:function(e,t){var i={whens:[],points:[],angles:[]};if(this.trackAttributes){var n;i.attributes={};for(var r=0,o=this.trackAttributes.length;o>r;++r)n=this.trackAttributes[r],i.attributes[n]=[],n in this.readers.kml||(this.readers.kml[n]=this.readers.kml._trackPointAttribute)}if(this.readChildNodes(e,i),i.whens.length!==i.points.length)throw Error("gx:Track with unequal number of when ("+i.whens.length+") and gx:coord ("+i.points.length+") elements.");var s=i.angles.length>0;if(s&&i.whens.length!==i.angles.length)throw Error("gx:Track with unequal number of when ("+i.whens.length+") and gx:angles ("+i.angles.length+") elements.");for(var a,l,h,r=0,o=i.whens.length;o>r;++r){if(a=t.feature.clone(),a.fid=t.feature.fid||t.feature.id,l=i.points[r],a.geometry=l,"z"in l&&(a.attributes.altitude=l.z),this.internalProjection&&this.externalProjection&&a.geometry.transform(this.externalProjection,this.internalProjection),this.trackAttributes)for(var c=0,u=this.trackAttributes.length;u>c;++c)a.attributes[n]=i.attributes[this.trackAttributes[c]][r];a.attributes.when=i.whens[r],a.attributes.trackId=t.feature.id,s&&(h=i.angles[r],a.attributes.heading=parseFloat(h[0]),a.attributes.tilt=parseFloat(h[1]),a.attributes.roll=parseFloat(h[2])),t.features.push(a)}},coord:function(e,t){var i=this.getChildValue(e),n=i.replace(this.regExes.trimSpace,"").split(/\s+/),r=new OpenLayers.Geometry.Point(n[0],n[1]);n.length>2&&(r.z=parseFloat(n[2])),t.points.push(r)},angles:function(e,t){var i=this.getChildValue(e),n=i.replace(this.regExes.trimSpace,"").split(/\s+/);t.angles.push(n)}}},parseFeature:function(e){for(var t,i,n,r,o=["MultiGeometry","Polygon","LineString","Point"],s=0,a=o.length;a>s;++s)if(t=o[s],this.internalns=e.namespaceURI?e.namespaceURI:this.kmlns,i=this.getElementsByTagNameNS(e,this.internalns,t),i.length>0){var r=this.parseGeometry[t.toLowerCase()];if(!r)throw new TypeError("Unsupported geometry type: "+t);n=r.apply(this,[i[0]]),this.internalProjection&&this.externalProjection&&n.transform(this.externalProjection,this.internalProjection);break}var l;this.extractAttributes&&(l=this.parseAttributes(e));var h=new OpenLayers.Feature.Vector(n,l),c=e.getAttribute("id")||e.getAttribute("name");return null!=c&&(h.fid=c),h},getStyle:function(e,t){var i=OpenLayers.Util.removeTail(e),n=OpenLayers.Util.extend({},t);if(n.depth++,n.styleBaseUrl=i,!this.styles[e]&&!OpenLayers.String.startsWith(e,"#")&&n.depth<=this.maxDepth&&!this.fetched[i]){var r=this.fetchLink(i);r&&this.parseData(r,n)}var o=OpenLayers.Util.extend({},this.styles[e]);return o},parseGeometry:{point:function(e){var t=this.getElementsByTagNameNS(e,this.internalns,"coordinates"),i=[];if(t.length>0){var n=t[0].firstChild.nodeValue;n=n.replace(this.regExes.removeSpace,""),i=n.split(",")}var r=null;if(!(i.length>1))throw"Bad coordinate string: "+n;return 2==i.length&&(i[2]=null),r=new OpenLayers.Geometry.Point(i[0],i[1],i[2])},linestring:function(e,t){var i=this.getElementsByTagNameNS(e,this.internalns,"coordinates"),n=null;if(i.length>0){var r=this.getChildValue(i[0]);r=r.replace(this.regExes.trimSpace,""),r=r.replace(this.regExes.trimComma,",");for(var o,s,a=r.split(this.regExes.splitSpace),l=a.length,h=Array(l),c=0;l>c;++c){if(o=a[c].split(","),s=o.length,!(s>1))throw"Bad LineString point coordinates: "+a[c];2==o.length&&(o[2]=null),h[c]=new OpenLayers.Geometry.Point(o[0],o[1],o[2])}if(!l)throw"Bad LineString coordinates: "+r;n=t?new OpenLayers.Geometry.LinearRing(h):new OpenLayers.Geometry.LineString(h)}return n},polygon:function(e){var t=this.getElementsByTagNameNS(e,this.internalns,"LinearRing"),i=t.length,n=Array(i);if(i>0)for(var r,o=0,s=t.length;s>o;++o){if(r=this.parseGeometry.linestring.apply(this,[t[o],!0]),!r)throw"Bad LinearRing geometry: "+o;n[o]=r}return new OpenLayers.Geometry.Polygon(n)},multigeometry:function(e){for(var t,i,n=[],r=e.childNodes,o=0,s=r.length;s>o;++o)if(t=r[o],1==t.nodeType){var a=t.prefix?t.nodeName.split(":")[1]:t.nodeName,i=this.parseGeometry[a.toLowerCase()];i&&n.push(i.apply(this,[t]))}return new OpenLayers.Geometry.Collection(n)}},parseAttributes:function(e){var t={},i=e.getElementsByTagName("ExtendedData");i.length&&(t=this.parseExtendedData(i[0]));for(var n,r,o,s=e.childNodes,a=0,l=s.length;l>a;++a)if(n=s[a],1==n.nodeType&&(r=n.childNodes,r.length>=1&&3>=r.length)){var o;switch(r.length){case 1:o=r[0];break;case 2:var h=r[0],c=r[1];o=3==h.nodeType||4==h.nodeType?h:c;break;case 3:default:o=r[1]}if(3==o.nodeType||4==o.nodeType){var u=n.prefix?n.nodeName.split(":")[1]:n.nodeName,d=OpenLayers.Util.getXmlNodeValue(o);d&&(d=d.replace(this.regExes.trimSpace,""),t[u]=d)}}return t},parseExtendedData:function(e){var t,i,n,r,o={},s=e.getElementsByTagName("Data");for(t=0,i=s.length;i>t;t++){n=s[t],r=n.getAttribute("name");var a={},l=n.getElementsByTagName("value");if(l.length&&(a.value=this.getChildValue(l[0])),this.kvpAttributes)o[r]=a.value;else{var h=n.getElementsByTagName("displayName");h.length&&(a.displayName=this.getChildValue(h[0])),o[r]=a}}var c=e.getElementsByTagName("SimpleData");for(t=0,i=c.length;i>t;t++){var a={};n=c[t],r=n.getAttribute("name"),a.value=this.getChildValue(n),this.kvpAttributes?o[r]=a.value:(a.displayName=r,o[r]=a)}return o},parseProperty:function(e,t,i){var n,r=this.getElementsByTagNameNS(e,t,i);try{n=OpenLayers.Util.getXmlNodeValue(r[0])}catch(o){n=null}return n},write:function(e){OpenLayers.Util.isArray(e)||(e=[e]);for(var t=this.createElementNS(this.kmlns,"kml"),i=this.createFolderXML(),n=0,r=e.length;r>n;++n)i.appendChild(this.createPlacemarkXML(e[n]));return t.appendChild(i),OpenLayers.Format.XML.prototype.write.apply(this,[t])},createFolderXML:function(){var e=this.createElementNS(this.kmlns,"Folder");if(this.foldersName){var t=this.createElementNS(this.kmlns,"name"),i=this.createTextNode(this.foldersName);t.appendChild(i),e.appendChild(t)}if(this.foldersDesc){var n=this.createElementNS(this.kmlns,"description"),r=this.createTextNode(this.foldersDesc);n.appendChild(r),e.appendChild(n)}return e},createPlacemarkXML:function(e){var t=this.createElementNS(this.kmlns,"name"),i=e.style&&e.style.label?e.style.label:e.attributes.name||e.id;t.appendChild(this.createTextNode(i));var n=this.createElementNS(this.kmlns,"description"),r=e.attributes.description||this.placemarksDesc;n.appendChild(this.createTextNode(r));var o=this.createElementNS(this.kmlns,"Placemark");null!=e.fid&&o.setAttribute("id",e.fid),o.appendChild(t),o.appendChild(n);var s=this.buildGeometryNode(e.geometry);if(o.appendChild(s),e.attributes){var a=this.buildExtendedData(e.attributes);a&&o.appendChild(a)}return o},buildGeometryNode:function(e){var t=e.CLASS_NAME,i=t.substring(t.lastIndexOf(".")+1),n=this.buildGeometry[i.toLowerCase()],r=null;return n&&(r=n.apply(this,[e])),r},buildGeometry:{point:function(e){var t=this.createElementNS(this.kmlns,"Point");return t.appendChild(this.buildCoordinatesNode(e)),t},multipoint:function(e){return this.buildGeometry.collection.apply(this,[e])},linestring:function(e){var t=this.createElementNS(this.kmlns,"LineString");return t.appendChild(this.buildCoordinatesNode(e)),t},multilinestring:function(e){return this.buildGeometry.collection.apply(this,[e])},linearring:function(e){var t=this.createElementNS(this.kmlns,"LinearRing");return t.appendChild(this.buildCoordinatesNode(e)),t},polygon:function(e){for(var t,i,n,r=this.createElementNS(this.kmlns,"Polygon"),o=e.components,s=0,a=o.length;a>s;++s)n=0==s?"outerBoundaryIs":"innerBoundaryIs",t=this.createElementNS(this.kmlns,n),i=this.buildGeometry.linearring.apply(this,[o[s]]),t.appendChild(i),r.appendChild(t);return r},multipolygon:function(e){return this.buildGeometry.collection.apply(this,[e])},collection:function(e){for(var t,i=this.createElementNS(this.kmlns,"MultiGeometry"),n=0,r=e.components.length;r>n;++n)t=this.buildGeometryNode.apply(this,[e.components[n]]),t&&i.appendChild(t);return i}},buildCoordinatesNode:function(e){var t,i=this.createElementNS(this.kmlns,"coordinates"),n=e.components;if(n){for(var r,o=n.length,s=Array(o),a=0;o>a;++a)r=n[a],s[a]=this.buildCoordinates(r);t=s.join(" ")}else t=this.buildCoordinates(e);var l=this.createTextNode(t);return i.appendChild(l),i},buildCoordinates:function(e){return this.internalProjection&&this.externalProjection&&(e=e.clone(),e.transform(this.internalProjection,this.externalProjection)),e.x+","+e.y},buildExtendedData:function(e){var t=this.createElementNS(this.kmlns,"ExtendedData");for(var i in e)if(e[i]&&"name"!=i&&"description"!=i&&"styleUrl"!=i){var n=this.createElementNS(this.kmlns,"Data");n.setAttribute("name",i);var r=this.createElementNS(this.kmlns,"value");if("object"==typeof e[i]){if(e[i].value&&r.appendChild(this.createTextNode(e[i].value)),e[i].displayName){var o=this.createElementNS(this.kmlns,"displayName");o.appendChild(this.getXMLDoc().createCDATASection(e[i].displayName)),n.appendChild(o)}}else r.appendChild(this.createTextNode(e[i]));n.appendChild(r),t.appendChild(n)}return this.isSimpleContent(t)?null:t},CLASS_NAME:"OpenLayers.Format.KML"});